// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './../../routes/__root'
import { Route as IndexRouteImport } from './../../routes/index'
import { Route as StrategyIndexRouteImport } from './../../routes/strategy/index'
import { Route as RadarsIndexRouteImport } from './../../routes/radars/index'
import { Route as PricingIndexRouteImport } from './../../routes/pricing/index'
import { Route as MarketplaceIndexRouteImport } from './../../routes/marketplace/index'
import { Route as LucyIndexRouteImport } from './../../routes/lucy/index'
import { Route as EmailWriterIndexRouteImport } from './../../routes/email-writer.index'
import { Route as EbookMachineIndexRouteImport } from './../../routes/ebook-machine/index'
import { Route as DashboardIndexRouteImport } from './../../routes/dashboard/index'
import { Route as CreditsIndexRouteImport } from './../../routes/credits/index'
import { Route as ChallengesIndexRouteImport } from './../../routes/challenges/index'
import { Route as BoardsIndexRouteImport } from './../../routes/boards/index'
import { Route as StrategyCanvasIndexRouteImport } from './../../routes/strategy/canvas/index'
import { Route as MarketsNewIndexRouteImport } from './../../routes/markets/new.index'
import { Route as MarketsMarketIdIndexRouteImport } from './../../routes/markets/$marketId.index'
import { Route as MarketplaceListingIdIndexRouteImport } from './../../routes/marketplace/$listingId.index'
import { Route as DashboardPreferencesIndexRouteImport } from './../../routes/dashboard/preferences.index'
import { Route as ChallengesChallengeIdIndexRouteImport } from './../../routes/challenges/$challengeId.index'
import { Route as BoardsBoardIdIndexRouteImport } from './../../routes/boards/$boardId.index'
import { Route as AuthRegisterIndexRouteImport } from './../../routes/auth/register.index'
import { Route as AuthLoginIndexRouteImport } from './../../routes/auth/login.index'
import { Route as OpportunitiesOpportunityIdScenariosIndexRouteImport } from './../../routes/opportunities/$opportunityId/scenarios.index'
import { Route as MarketsMarketIdSegmentsNewIndexRouteImport } from './../../routes/markets/$marketId/segments/new.index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const StrategyIndexRoute = StrategyIndexRouteImport.update({
  id: '/strategy/',
  path: '/strategy/',
  getParentRoute: () => rootRouteImport,
} as any)
const RadarsIndexRoute = RadarsIndexRouteImport.update({
  id: '/radars/',
  path: '/radars/',
  getParentRoute: () => rootRouteImport,
} as any)
const PricingIndexRoute = PricingIndexRouteImport.update({
  id: '/pricing/',
  path: '/pricing/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceIndexRoute = MarketplaceIndexRouteImport.update({
  id: '/marketplace/',
  path: '/marketplace/',
  getParentRoute: () => rootRouteImport,
} as any)
const LucyIndexRoute = LucyIndexRouteImport.update({
  id: '/lucy/',
  path: '/lucy/',
  getParentRoute: () => rootRouteImport,
} as any)
const EmailWriterIndexRoute = EmailWriterIndexRouteImport.update({
  id: '/email-writer/',
  path: '/email-writer/',
  getParentRoute: () => rootRouteImport,
} as any)
const EbookMachineIndexRoute = EbookMachineIndexRouteImport.update({
  id: '/ebook-machine/',
  path: '/ebook-machine/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const CreditsIndexRoute = CreditsIndexRouteImport.update({
  id: '/credits/',
  path: '/credits/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChallengesIndexRoute = ChallengesIndexRouteImport.update({
  id: '/challenges/',
  path: '/challenges/',
  getParentRoute: () => rootRouteImport,
} as any)
const BoardsIndexRoute = BoardsIndexRouteImport.update({
  id: '/boards/',
  path: '/boards/',
  getParentRoute: () => rootRouteImport,
} as any)
const StrategyCanvasIndexRoute = StrategyCanvasIndexRouteImport.update({
  id: '/strategy/canvas/',
  path: '/strategy/canvas/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketsNewIndexRoute = MarketsNewIndexRouteImport.update({
  id: '/markets/new/',
  path: '/markets/new/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketsMarketIdIndexRoute = MarketsMarketIdIndexRouteImport.update({
  id: '/markets/$marketId/',
  path: '/markets/$marketId/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceListingIdIndexRoute =
  MarketplaceListingIdIndexRouteImport.update({
    id: '/marketplace/$listingId/',
    path: '/marketplace/$listingId/',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardPreferencesIndexRoute =
  DashboardPreferencesIndexRouteImport.update({
    id: '/dashboard/preferences/',
    path: '/dashboard/preferences/',
    getParentRoute: () => rootRouteImport,
  } as any)
const ChallengesChallengeIdIndexRoute =
  ChallengesChallengeIdIndexRouteImport.update({
    id: '/challenges/$challengeId/',
    path: '/challenges/$challengeId/',
    getParentRoute: () => rootRouteImport,
  } as any)
const BoardsBoardIdIndexRoute = BoardsBoardIdIndexRouteImport.update({
  id: '/boards/$boardId/',
  path: '/boards/$boardId/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterIndexRoute = AuthRegisterIndexRouteImport.update({
  id: '/auth/register/',
  path: '/auth/register/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginIndexRoute = AuthLoginIndexRouteImport.update({
  id: '/auth/login/',
  path: '/auth/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const OpportunitiesOpportunityIdScenariosIndexRoute =
  OpportunitiesOpportunityIdScenariosIndexRouteImport.update({
    id: '/opportunities/$opportunityId/scenarios/',
    path: '/opportunities/$opportunityId/scenarios/',
    getParentRoute: () => rootRouteImport,
  } as any)
const MarketsMarketIdSegmentsNewIndexRoute =
  MarketsMarketIdSegmentsNewIndexRouteImport.update({
    id: '/markets/$marketId/segments/new/',
    path: '/markets/$marketId/segments/new/',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/boards': typeof BoardsIndexRoute
  '/challenges': typeof ChallengesIndexRoute
  '/credits': typeof CreditsIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/ebook-machine': typeof EbookMachineIndexRoute
  '/email-writer': typeof EmailWriterIndexRoute
  '/lucy': typeof LucyIndexRoute
  '/marketplace': typeof MarketplaceIndexRoute
  '/pricing': typeof PricingIndexRoute
  '/radars': typeof RadarsIndexRoute
  '/strategy': typeof StrategyIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/boards/$boardId': typeof BoardsBoardIdIndexRoute
  '/challenges/$challengeId': typeof ChallengesChallengeIdIndexRoute
  '/dashboard/preferences': typeof DashboardPreferencesIndexRoute
  '/marketplace/$listingId': typeof MarketplaceListingIdIndexRoute
  '/markets/$marketId': typeof MarketsMarketIdIndexRoute
  '/markets/new': typeof MarketsNewIndexRoute
  '/strategy/canvas': typeof StrategyCanvasIndexRoute
  '/opportunities/$opportunityId/scenarios': typeof OpportunitiesOpportunityIdScenariosIndexRoute
  '/markets/$marketId/segments/new': typeof MarketsMarketIdSegmentsNewIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/boards': typeof BoardsIndexRoute
  '/challenges': typeof ChallengesIndexRoute
  '/credits': typeof CreditsIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/ebook-machine': typeof EbookMachineIndexRoute
  '/email-writer': typeof EmailWriterIndexRoute
  '/lucy': typeof LucyIndexRoute
  '/marketplace': typeof MarketplaceIndexRoute
  '/pricing': typeof PricingIndexRoute
  '/radars': typeof RadarsIndexRoute
  '/strategy': typeof StrategyIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/boards/$boardId': typeof BoardsBoardIdIndexRoute
  '/challenges/$challengeId': typeof ChallengesChallengeIdIndexRoute
  '/dashboard/preferences': typeof DashboardPreferencesIndexRoute
  '/marketplace/$listingId': typeof MarketplaceListingIdIndexRoute
  '/markets/$marketId': typeof MarketsMarketIdIndexRoute
  '/markets/new': typeof MarketsNewIndexRoute
  '/strategy/canvas': typeof StrategyCanvasIndexRoute
  '/opportunities/$opportunityId/scenarios': typeof OpportunitiesOpportunityIdScenariosIndexRoute
  '/markets/$marketId/segments/new': typeof MarketsMarketIdSegmentsNewIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/boards/': typeof BoardsIndexRoute
  '/challenges/': typeof ChallengesIndexRoute
  '/credits/': typeof CreditsIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/ebook-machine/': typeof EbookMachineIndexRoute
  '/email-writer/': typeof EmailWriterIndexRoute
  '/lucy/': typeof LucyIndexRoute
  '/marketplace/': typeof MarketplaceIndexRoute
  '/pricing/': typeof PricingIndexRoute
  '/radars/': typeof RadarsIndexRoute
  '/strategy/': typeof StrategyIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/auth/register/': typeof AuthRegisterIndexRoute
  '/boards/$boardId/': typeof BoardsBoardIdIndexRoute
  '/challenges/$challengeId/': typeof ChallengesChallengeIdIndexRoute
  '/dashboard/preferences/': typeof DashboardPreferencesIndexRoute
  '/marketplace/$listingId/': typeof MarketplaceListingIdIndexRoute
  '/markets/$marketId/': typeof MarketsMarketIdIndexRoute
  '/markets/new/': typeof MarketsNewIndexRoute
  '/strategy/canvas/': typeof StrategyCanvasIndexRoute
  '/opportunities/$opportunityId/scenarios/': typeof OpportunitiesOpportunityIdScenariosIndexRoute
  '/markets/$marketId/segments/new/': typeof MarketsMarketIdSegmentsNewIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/boards'
    | '/challenges'
    | '/credits'
    | '/dashboard'
    | '/ebook-machine'
    | '/email-writer'
    | '/lucy'
    | '/marketplace'
    | '/pricing'
    | '/radars'
    | '/strategy'
    | '/auth/login'
    | '/auth/register'
    | '/boards/$boardId'
    | '/challenges/$challengeId'
    | '/dashboard/preferences'
    | '/marketplace/$listingId'
    | '/markets/$marketId'
    | '/markets/new'
    | '/strategy/canvas'
    | '/opportunities/$opportunityId/scenarios'
    | '/markets/$marketId/segments/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/boards'
    | '/challenges'
    | '/credits'
    | '/dashboard'
    | '/ebook-machine'
    | '/email-writer'
    | '/lucy'
    | '/marketplace'
    | '/pricing'
    | '/radars'
    | '/strategy'
    | '/auth/login'
    | '/auth/register'
    | '/boards/$boardId'
    | '/challenges/$challengeId'
    | '/dashboard/preferences'
    | '/marketplace/$listingId'
    | '/markets/$marketId'
    | '/markets/new'
    | '/strategy/canvas'
    | '/opportunities/$opportunityId/scenarios'
    | '/markets/$marketId/segments/new'
  id:
    | '__root__'
    | '/'
    | '/boards/'
    | '/challenges/'
    | '/credits/'
    | '/dashboard/'
    | '/ebook-machine/'
    | '/email-writer/'
    | '/lucy/'
    | '/marketplace/'
    | '/pricing/'
    | '/radars/'
    | '/strategy/'
    | '/auth/login/'
    | '/auth/register/'
    | '/boards/$boardId/'
    | '/challenges/$challengeId/'
    | '/dashboard/preferences/'
    | '/marketplace/$listingId/'
    | '/markets/$marketId/'
    | '/markets/new/'
    | '/strategy/canvas/'
    | '/opportunities/$opportunityId/scenarios/'
    | '/markets/$marketId/segments/new/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BoardsIndexRoute: typeof BoardsIndexRoute
  ChallengesIndexRoute: typeof ChallengesIndexRoute
  CreditsIndexRoute: typeof CreditsIndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  EbookMachineIndexRoute: typeof EbookMachineIndexRoute
  EmailWriterIndexRoute: typeof EmailWriterIndexRoute
  LucyIndexRoute: typeof LucyIndexRoute
  MarketplaceIndexRoute: typeof MarketplaceIndexRoute
  PricingIndexRoute: typeof PricingIndexRoute
  RadarsIndexRoute: typeof RadarsIndexRoute
  StrategyIndexRoute: typeof StrategyIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthRegisterIndexRoute: typeof AuthRegisterIndexRoute
  BoardsBoardIdIndexRoute: typeof BoardsBoardIdIndexRoute
  ChallengesChallengeIdIndexRoute: typeof ChallengesChallengeIdIndexRoute
  DashboardPreferencesIndexRoute: typeof DashboardPreferencesIndexRoute
  MarketplaceListingIdIndexRoute: typeof MarketplaceListingIdIndexRoute
  MarketsMarketIdIndexRoute: typeof MarketsMarketIdIndexRoute
  MarketsNewIndexRoute: typeof MarketsNewIndexRoute
  StrategyCanvasIndexRoute: typeof StrategyCanvasIndexRoute
  OpportunitiesOpportunityIdScenariosIndexRoute: typeof OpportunitiesOpportunityIdScenariosIndexRoute
  MarketsMarketIdSegmentsNewIndexRoute: typeof MarketsMarketIdSegmentsNewIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/strategy/': {
      id: '/strategy/'
      path: '/strategy'
      fullPath: '/strategy'
      preLoaderRoute: typeof StrategyIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/radars/': {
      id: '/radars/'
      path: '/radars'
      fullPath: '/radars'
      preLoaderRoute: typeof RadarsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pricing/': {
      id: '/pricing/'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace/': {
      id: '/marketplace/'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof MarketplaceIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lucy/': {
      id: '/lucy/'
      path: '/lucy'
      fullPath: '/lucy'
      preLoaderRoute: typeof LucyIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/email-writer/': {
      id: '/email-writer/'
      path: '/email-writer'
      fullPath: '/email-writer'
      preLoaderRoute: typeof EmailWriterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ebook-machine/': {
      id: '/ebook-machine/'
      path: '/ebook-machine'
      fullPath: '/ebook-machine'
      preLoaderRoute: typeof EbookMachineIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/credits/': {
      id: '/credits/'
      path: '/credits'
      fullPath: '/credits'
      preLoaderRoute: typeof CreditsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/': {
      id: '/challenges/'
      path: '/challenges'
      fullPath: '/challenges'
      preLoaderRoute: typeof ChallengesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/boards/': {
      id: '/boards/'
      path: '/boards'
      fullPath: '/boards'
      preLoaderRoute: typeof BoardsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/strategy/canvas/': {
      id: '/strategy/canvas/'
      path: '/strategy/canvas'
      fullPath: '/strategy/canvas'
      preLoaderRoute: typeof StrategyCanvasIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/markets/new/': {
      id: '/markets/new/'
      path: '/markets/new'
      fullPath: '/markets/new'
      preLoaderRoute: typeof MarketsNewIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/markets/$marketId/': {
      id: '/markets/$marketId/'
      path: '/markets/$marketId'
      fullPath: '/markets/$marketId'
      preLoaderRoute: typeof MarketsMarketIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace/$listingId/': {
      id: '/marketplace/$listingId/'
      path: '/marketplace/$listingId'
      fullPath: '/marketplace/$listingId'
      preLoaderRoute: typeof MarketplaceListingIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/preferences/': {
      id: '/dashboard/preferences/'
      path: '/dashboard/preferences'
      fullPath: '/dashboard/preferences'
      preLoaderRoute: typeof DashboardPreferencesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/$challengeId/': {
      id: '/challenges/$challengeId/'
      path: '/challenges/$challengeId'
      fullPath: '/challenges/$challengeId'
      preLoaderRoute: typeof ChallengesChallengeIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/boards/$boardId/': {
      id: '/boards/$boardId/'
      path: '/boards/$boardId'
      fullPath: '/boards/$boardId'
      preLoaderRoute: typeof BoardsBoardIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register/': {
      id: '/auth/register/'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/opportunities/$opportunityId/scenarios/': {
      id: '/opportunities/$opportunityId/scenarios/'
      path: '/opportunities/$opportunityId/scenarios'
      fullPath: '/opportunities/$opportunityId/scenarios'
      preLoaderRoute: typeof OpportunitiesOpportunityIdScenariosIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/markets/$marketId/segments/new/': {
      id: '/markets/$marketId/segments/new/'
      path: '/markets/$marketId/segments/new'
      fullPath: '/markets/$marketId/segments/new'
      preLoaderRoute: typeof MarketsMarketIdSegmentsNewIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BoardsIndexRoute: BoardsIndexRoute,
  ChallengesIndexRoute: ChallengesIndexRoute,
  CreditsIndexRoute: CreditsIndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  EbookMachineIndexRoute: EbookMachineIndexRoute,
  EmailWriterIndexRoute: EmailWriterIndexRoute,
  LucyIndexRoute: LucyIndexRoute,
  MarketplaceIndexRoute: MarketplaceIndexRoute,
  PricingIndexRoute: PricingIndexRoute,
  RadarsIndexRoute: RadarsIndexRoute,
  StrategyIndexRoute: StrategyIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthRegisterIndexRoute: AuthRegisterIndexRoute,
  BoardsBoardIdIndexRoute: BoardsBoardIdIndexRoute,
  ChallengesChallengeIdIndexRoute: ChallengesChallengeIdIndexRoute,
  DashboardPreferencesIndexRoute: DashboardPreferencesIndexRoute,
  MarketplaceListingIdIndexRoute: MarketplaceListingIdIndexRoute,
  MarketsMarketIdIndexRoute: MarketsMarketIdIndexRoute,
  MarketsNewIndexRoute: MarketsNewIndexRoute,
  StrategyCanvasIndexRoute: StrategyCanvasIndexRoute,
  OpportunitiesOpportunityIdScenariosIndexRoute:
    OpportunitiesOpportunityIdScenariosIndexRoute,
  MarketsMarketIdSegmentsNewIndexRoute: MarketsMarketIdSegmentsNewIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
